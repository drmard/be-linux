/*
 * Baikal SoC series Local Clock and Reset Unit (LCRU) register offsets
 * and bit definitions.
 *
 * Copyright (C) 2019 Baikal Electronics JSC.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef _LINUX_MFD_SYSCON_BAIKAL_LCRU_H_
#define _LINUX_MFD_SYSCON_BAIKAL_LCRU_H_

#include <linux/regmap.h>

//#define BAIKAL_CMU_PCIE_STEP	0x30

//#define BAIKAL_CMU_PCIE_MSTRCLK	0x20
//#define BAIKAL_CMU_PCIE_SLVCLK	0x30
//#define BAIKAL_CMU_PCIE_CFGCLK	0x40

#define BAIKAL_LCRU_PCIE_RESET_BASE		0x50000		/* GPR0_RW */
#define BAIKAL_LCRU_PCIE_RESET(x)		((x * 0x20) + BAIKAL_LCRU_PCIE_RESET_BASE)
#define BAIKAL_PCIE_ADB_PWRDWN			(1 << 13)
#define BAIKAL_PCIE_HOT_RESET			(1 << 12)
#define BAIKAL_PCIE_NONSTICKY_RST		(1 << 11)
#define BAIKAL_PCIE_STICKY_RST			(1 << 10)
#define BAIKAL_PCIE_PWR_RST				(1 << 9)
#define BAIKAL_PCIE_CORE_RST			(1 << 8)
#define BAIKAL_PCIE_PIPE1_RESET			(1 << 5) /* x8 controller only */
#define BAIKAL_PCIE_PIPE0_RESET			(1 << 4) /* x8 controller only */
#define BAIKAL_PCIE_PIPE_RESET			(1 << 4) /* x4 controllers only */
#define BAIKAL_PCIE_PHY_RESET			(1 << 0)

#define BAIKAL_LCRU_PCIE_STATUS_BASE	0x50004		/* GPR0_RO */
#define BAIKAL_LCRU_PCIE_STATUS(x)		((x * 0x20) + BAIKAL_LCRU_PCIE_STATUS_BASE)
#define BAIKAL_PCIE_TURNOFF_ACK			(1 << 31)
#define BAIKAL_PCIE_ADB_PWRACK			(1 << 30)
#define BAIKAL_PCIE_WAKE_DET			(1 << 24)
#define BAIKAL_PCIE_AUX_PM_EN			(1 << 22)
#define BAIKAL_PCIE_PM_PME_STATUS		(1 << 21)
#define BAIKAL_PCIE_PM_PME_EN			(1 << 20)
#define BAIKAL_PCIE_PM_DSTATE_SHIFT		16
#define BAIKAL_PCIE_PM_DSTATE_MASK		0x7
#define BAIKAL_PCIE_PM_DSTATE_D0		0
#define BAIKAL_PCIE_PM_DSTATE_D1		1
#define BAIKAL_PCIE_PM_DSTATE_D2		2
#define BAIKAL_PCIE_PM_DSTATE_D3		3
#define BAIKAL_PCIE_PM_DSTATE_UNINIT	4
#define BAIKAL_PCIE_LTSSM_RCVRY_EQ		(1 << 15)
#define BAIKAL_PCIE_PIPE_CLK_REQ		(1 << 14)
#define BAIKAL_PCIE_SMLH_REQ_RST		(1 << 13)
#define BAIKAL_PCIE_LINK_REQ_RST		(1 << 12)
#define BAIKAL_PCIE_PM_LINKSTATE_L2		(1 << 10)
#define BAIKAL_PCIE_PM_LINKSTATE_L1		(1 << 9)
#define BAIKAL_PCIE_PM_LINKSTATE_L0S	(1 << 8)
#define BAIKAL_PCIE_RDLH_LINKUP			(1 << 7)
#define BAIKAL_PCIE_SMLH_LINKUP			(1 << 6)
#define BAIKAL_PCIE_LTSSM_STATE_SHIFT					0
#define BAIKAL_PCIE_LTSSM_STATE_MASK					0x3F
#define BAIKAL_PCIE_LTSSM_STATE_DETECT_QUIET			0x00
#define BAIKAL_PCIE_LTSSM_STATE_DETECT_ACT				0x01
#define BAIKAL_PCIE_LTSSM_STATE_POLLING_ACTIVE			0x02
#define BAIKAL_PCIE_LTSSM_STATE_POLLING_COMPLIANCE		0x03
#define BAIKAL_PCIE_LTSSM_STATE_POLLING_CONFIG			0x04
#define BAIKAL_PCIE_LTSSM_STATE_PRE_DETECT_QUIET		0x05
#define BAIKAL_PCIE_LTSSM_STATE_DETECT_WAIT				0x06
#define BAIKAL_PCIE_LTSSM_STATE_CFG_LINK_WD_START		0x07
#define BAIKAL_PCIE_LTSSM_STATE_CFG_LINK_WD_ACCEPT		0x08
#define BAIKAL_PCIE_LTSSM_STATE_CFG_LANE_NUM_WAIT		0x09
#define BAIKAL_PCIE_LTSSM_STATE_CFG_LANE_NUM_ACCEPT		0x0A
#define BAIKAL_PCIE_LTSSM_STATE_CFG_COMPLETE			0x0B
#define BAIKAL_PCIE_LTSSM_STATE_CFG_IDLE				0x0C
#define BAIKAL_PCIE_LTSSM_STATE_RCVRY_LOCK				0x0D
#define BAIKAL_PCIE_LTSSM_STATE_RCVRY_SPEED				0x0E
#define BAIKAL_PCIE_LTSSM_STATE_RCVRY_RCVR_CFG			0x0F
#define BAIKAL_PCIE_LTSSM_STATE_RCVRY_IDLE				0x10
#define BAIKAL_PCIE_LTSSM_STATE_RCVRY_EQ0				0x20
#define BAIKAL_PCIE_LTSSM_STATE_RCVRY_EQ1				0x21
#define BAIKAL_PCIE_LTSSM_STATE_RCVRY_EQ2				0x22
#define BAIKAL_PCIE_LTSSM_STATE_RCVRY_EQ3				0x23
#define BAIKAL_PCIE_LTSSM_STATE_L0						0x11
#define BAIKAL_PCIE_LTSSM_STATE_L0S						0x12
#define BAIKAL_PCIE_LTSSM_STATE_L123_SEND_IDLE			0x13
#define BAIKAL_PCIE_LTSSM_STATE_L1_IDLE					0x14
#define BAIKAL_PCIE_LTSSM_STATE_L2_IDLE					0x15
#define BAIKAL_PCIE_LTSSM_STATE_L2_WAKE					0x16
#define BAIKAL_PCIE_LTSSM_STATE_DISABLED_ENTRY			0x17
#define BAIKAL_PCIE_LTSSM_STATE_DISABLED_IDLE			0x18
#define BAIKAL_PCIE_LTSSM_STATE_DISABLED				0x19
#define BAIKAL_PCIE_LTSSM_STATE_LOOPBACK_ENTRY			0x1A
#define BAIKAL_PCIE_LTSSM_STATE_LOOPBACK_ACTIVE			0x1B
#define BAIKAL_PCIE_LTSSM_STATE_LOOPBACK_EXIT			0x1C
#define BAIKAL_PCIE_LTSSM_STATE_LOOPBACK_EXIT_TIMEOUT	0x1D
#define BAIKAL_PCIE_LTSSM_STATE_HOT_RESET_ENTRY			0x1E
#define BAIKAL_PCIE_LTSSM_STATE_HOT_RESET				0x1F

#define BAIKAL_LCRU_PCIE_GEN_CTL_BASE		0x50008		/* GPR1_RW*/
#define BAIKAL_LCRU_PCIE_GEN_CTL(x)			((x * 0x20) + BAIKAL_LCRU_PCIE_GEN_CTL_BASE)
#define BAIKAL_PCIE_AUX_PWR_DET				(1 << 24)
#define BAIKAL_PCIE_TXLANE_FLIP_EN			(1 << 17)
#define BAIKAL_PCIE_RXLANE_FLIP_EN			(1 << 16)
#define BAIKAL_PCIE_PHY_MGMT_ENABLE			(1 << 3)
#define BAIKAL_PCIE_DBI2_MODE				(1 << 2)
#define BAIKAL_PCIE_LTSSM_ENABLE			(1 << 1)

#define BAIKAL_LCRU_PCIE_POWER_CTL_BASE		0x50010		/* GPR2_RW */
#define BAIKAL_LCRU_PCIE_POWER_CTL(x)		((x * 0x20) + BAIKAL_LCRU_POWER_CTL_BASE)
#define BAIKAL_PCIE_PHY_CLK_REQ				(1 << 27)
#define BAIKAL_PCIE_APP_CLK_REQ				(1 << 26)
#define BAIKAL_PCIE_PERSTN					(1 << 25)
#define BAIKAL_PCIE_TURNOFF_REQ				(1 << 24)
#define BAIKAL_PCIE_REQ_EXIT_L1				(1 << 17)
#define BAIKAL_PCIE_L1_PENDING				(1 << 16)
#define BAIKAL_PCIE_MAC_CLK_REQ				(1 << 5)
#define BAIKAL_PCIE_PCS_CLK_REQ				(1 << 4)

#define BAIKAL_LCRU_PCIE_MSI_TRANS_CTL0		0x500E8
#define BAIKAL_PCIE_MSI_AWUSER_SHIFT		0
#define BAIKAL_PCIE_MSI_AWUSER_MASK			0xF

#define BAIKAL_LCRU_PCIE_MSI_TRANS_CTL2		0x500F8
#define BAIKAL_PCIE_MSI_TRANS_EN(x)			(1 << (9 + (x)))
#define BAIKAL_PCIE_MSI_RCNUM(x)			((x) << (2 * (x)))
#define BAIKAL_PCIE_MSI_RCNUM_MASK(x)		(0x3 << (2 * (x)))

inline u32 baikal_pcie_lcru_readl(struct regmap *lcru, u32 offset)
{
    u32 val;
    regmap_read(lcru, offset, &val);
    return val;
}

inline void baikal_pcie_lcru_writel(struct regmap *lcru, u32 offset, u32 val)
{
    regmap_write(lcru, offset, val);
}

#endif /* _LINUX_MFD_SYSCON_BAIKAL_LCRU_H_ */
